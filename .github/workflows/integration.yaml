name: Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    # Every night at 03:00
    - cron: '0 3 * * *'

jobs:
  integration_tests_linux_local:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Always keep support to at least 2 stable versions
        version: [ "2.14", "2.15", "2.16", "2.17", "2.18", "latest" ]

    container:
      image: dart:${{ matrix.version }}

    steps:
      - run: |
          apt-get update
          apt-get install unzip
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: cd sidekick && dart pub get --no-precompile
      - name: Run tests
        run: cd sidekick && dart test test/test_runner.dart
        env:
          SIDEKICK_PUB_DEPS: "false"
          SIDEKICK_ANALYZE: "${{ matrix.version == '2.18' }}"

  integration_tests_linux_pub:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request }}
    strategy:
      fail-fast: false
      matrix:
        # Always keep support to at least 2 stable versions
        version: ["2.14", "2.15", "2.16", "2.17", "2.18", "latest"]

    container:
      image: dart:${{ matrix.version }}

    steps:
      - run: |
         apt-get update
         apt-get install unzip
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: cd sidekick && dart pub get --no-precompile
      - name: Run tests
        run: cd sidekick && dart test test/test_runner.dart
        env:
          SIDEKICK_PUB_DEPS: "true"
          SIDEKICK_ANALYZE: "${{ matrix.version == '2.18' }}"
      - name: Run latest sidekick from pub
        run: |
          set -o errexit
          dart pub global activate sidekick
          mkdir tmp
          cd tmp
          sidekick init --cliName dashi --entrypointDirectory . --cliPackageDirectory .
          ./dashi -h
          ./dashi sidekick -h
          ./dashi sidekick plugins install sidekick_vault
          ./dashi vault -h

  integration_tests_windows:
    runs-on: windows-2022

    # They don't work yet, but someone should invest time here
    if: 'false'
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
      - name: Install dependencies
        run: cd sidekick && dart pub get --no-precompile
      - name: Run tests
        run: cd sidekick && dart test test/test_runner.dart
